/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package cz.cuni.mff.ufal.morphodita;

public class TaggedLemmas {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected TaggedLemmas(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TaggedLemmas obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        morphodita_javaJNI.delete_TaggedLemmas(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public TaggedLemmas() {
    this(morphodita_javaJNI.new_TaggedLemmas__SWIG_0(), true);
  }

  public TaggedLemmas(long n) {
    this(morphodita_javaJNI.new_TaggedLemmas__SWIG_1(n), true);
  }

  public long size() {
    return morphodita_javaJNI.TaggedLemmas_size(swigCPtr, this);
  }

  public long capacity() {
    return morphodita_javaJNI.TaggedLemmas_capacity(swigCPtr, this);
  }

  public void reserve(long n) {
    morphodita_javaJNI.TaggedLemmas_reserve(swigCPtr, this, n);
  }

  public boolean isEmpty() {
    return morphodita_javaJNI.TaggedLemmas_isEmpty(swigCPtr, this);
  }

  public void clear() {
    morphodita_javaJNI.TaggedLemmas_clear(swigCPtr, this);
  }

  public void add(TaggedLemma x) {
    morphodita_javaJNI.TaggedLemmas_add(swigCPtr, this, TaggedLemma.getCPtr(x), x);
  }

  public TaggedLemma get(int i) {
    return new TaggedLemma(morphodita_javaJNI.TaggedLemmas_get(swigCPtr, this, i), false);
  }

  public void set(int i, TaggedLemma val) {
    morphodita_javaJNI.TaggedLemmas_set(swigCPtr, this, i, TaggedLemma.getCPtr(val), val);
  }

}
